name: Build binary file

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Dwnload AutoHotKey v2.0-rc archive
      shell: pwsh
      run: |
        # Special thank: nekocodeX/GitHub-Action-Ahk2Exe
        Write-Output "TEMP=$env:TEMP; LOCALAPPDATA=$env:LOCALAPPDATA"
        $GetLatestAhk2ExeUrl = $(Invoke-WebRequest "https://api.github.com/repos/AutoHotkey/Ahk2Exe/releases/latest" | ConvertFrom-Json).assets[0].browser_download_url
        Invoke-WebRequest "https://www.autohotkey.com/download/ahk-v2.zip" -OutFile "$env:TEMP\autohotkey.zip"
        Invoke-WebRequest "$GetLatestAhk2ExeUrl" -OutFile "$env:TEMP\ahk2exe.zip"

    - name: Install AutoHotKey v2.0-rc
      shell: pwsh
      run: |
        # Special thank: nekocodeX/GitHub-Action-Ahk2Exe
        Expand-Archive -Path "$env:TEMP\autohotkey.zip" -DestinationPath "$env:LOCALAPPDATA\Programs\AutoHotkey" -Force
        Expand-Archive -Path "$env:TEMP\ahk2exe.zip" -DestinationPath "$env:LOCALAPPDATA\Programs\AutoHotkey\Compiler" -Force
        Remove-Item -Path "$env:TEMP\autohotkey.zip" -Force
        Remove-Item -Path "$env:TEMP\ahk2exe.zip" -Force
        Write-Output ("$env:LOCALAPPDATA\Programs\AutoHotkey;" + "$env:LOCALAPPDATA\Programs\AutoHotkey\Compiler") | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build x64 binary file
      shell: pwsh
      run: |
        ahk2exe.exe /in AutoWeMeeting.ahk /out AutoWeMeeting64.exe /base $env:LOCALAPPDATA\Programs\AutoHotkey\AutoHotkey64.exe

    - name: Build x32 binary file
      shell: pwsh
      run: |
        ahk2exe.exe /in AutoWeMeeting.ahk /out AutoWeMeeting32.exe /base $env:LOCALAPPDATA\Programs\AutoHotkey\AutoHotkey32.exe

    - name: Zip file
      shell: pwsh
      run: |
        $CompressRelease = @{
            LiteralPath= "AutoWeMeeting64.exe", "AutoWeMeeting32.exe", "AutoWeMeeting.ahk", "Schedule.csv", "AWM-JoinMeet.png", "README.md", "LICENSE"
            CompressionLevel = "Optimal"
            DestinationPath = "AutoWeMeeting-Build-$env:GITHUB_RUN_NUMBER.zip"
        }
        Compress-Archive @CompressRelease

    - name: Generate release body
      shell: pwsh
      run: |
        Write-Output "## 下载此版本" | Out-File -FilePath ReleaseBody.txt -Encoding utf8
        Write-Output "[![下载@Build-$env:GITHUB_RUN_NUMBER](https://img.shields.io/github/downloads/SummonHIM/AutoWeMeeting/Build-$env:GITHUB_RUN_NUMBER/total?label=%E4%B8%8B%E8%BD%BD%40Build-$env:GITHUB_RUN_NUMBER&style=for-the-badge)](https://github.com/SummonHIM/AutoWeMeeting/releases/download/Build-$env:GITHUB_RUN_NUMBER/AutoWeMeeting-Build-$env:GITHUB_RUN_NUMBER.zip)" | Out-File -FilePath ReleaseBody.txt -Encoding utf8 -Append
        Write-Output "## 更新日志" | Out-File -FilePath ReleaseBody.txt -Encoding utf8 -Append
        Write-Output "https://github.com/SummonHIM/AutoWeMeeting/compare/Build-$($env:GITHUB_RUN_NUMBER-1)...Build-$env:GITHUB_RUN_NUMBER" | Out-File -FilePath ReleaseBody.txt -Encoding utf8 -Append

    - name: Upload artifact to workflows
      uses: actions/upload-artifact@v3
      with:
        name: Build
        path: AutoWeMeeting-Build-${{ github.run_number }}.zip

    - name: Create and upload artifact to Releases
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: AutoWeMeeting Build ID${{ github.run_number }}
        tag_name: Build-${{ github.run_number }}
        body_path: ReleaseBody.txt
        prerelease: true
        files: AutoWeMeeting-Build-${{ github.run_number }}.zip
